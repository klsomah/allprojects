@page
@model EducationalFundingCo.Pages.Contract.SignContractModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Pages/Shared/_LayoutMain.cshtml";
}

<div>
    <nav class="rg-breadcrumb" aria-label="breadcrumb">
        <h4 class="text-highlight-primary">Sign Agreement</h4>
        <ol class="breadcrumb">
            <li class="breadcrumb-item breadcrumb-item-first"><a href="#">Home</a></li>
            <li class="breadcrumb-item active" aria-current="page"><a href="#">User</a></li>
            <li class="breadcrumb-item active" aria-current="page"><a href="#">Sign Agreement</a></li>
        </ol>
        <button class="btn btn-secondary btn-icon ml-auto btn-small"><span class="material-icons">settings_applications</span></button>
    </nav>
    <div class="alert rg-alert alert-danger" id="divValidation" role="alert">
        <ul></ul>
    </div>
    <div class="rg-tabs">
        <ul class="nav nav-tabs nav-fill rg-tabs-card primary" id="myTab" role="tablist">
            <li class="nav-item">
                <a class="nav-link p-4 active" id="personal-info-tab" data-toggle="tab" href="#personal-info" role="tab" aria-controls="personal-info" aria-selected="true">
                    <span class="material-icons">input</span>
                    Sign Contract
                </a>
            </li>
           
        </ul>
        <form method="post" class="was-validated" id="contractForm">
            @if (User.IsInRole("Administrator"))
            {
                <input id="txtRole" value="Admin" hidden />
            }
            else
            {
                <input id="txtRole" value="Student" hidden />
            }
            <div class="tab-content" id="myTabContent">
                <div class="tab-pane fade show active" id="complete" role="tabpanel" aria-labelledby="complete-tab">
                    <div class="row justify-content-md-center">
                        <div class="col-md-8">
                            <div class="rg-card-simple equal-height text-center">
                                <header>
                                    <h5>Income Share Agreement</h5>
                                    <span>In consideration for @Model.Contract.AcademyProgram.ProgramName by Educational Funding Co.</span>
                                </header>
                                <section>
                                    <p class="text-thin">
                                        <div class="row">
                                            <div class="col-lg-3">
                                                Income Percent
                                                <br /><h5>@Model.Contract.AcademyProgram.IncomePercentage %</h5>
                                                <input id="incomePercentage" name="incomePercentage" value="@Model.Contract.AcademyProgram.IncomePercentage" hidden />
                                            </div>
                                            <div class="col-lg-3">
                                                Payment Term
                                                <br /><h5>@Model.Contract.AcademyProgram.Duration</h5>
                                                <input id="duration" name="duration" value="@Model.Contract.AcademyProgram.Duration" hidden />
                                            </div>
                                            <div class="col-lg-3">
                                                Payment Cap
                                                <br /><h5>@Convert.ToString(string.Format("{0:C2}", Model.Contract.AcademyProgram.Cap))</h5>
                                            </div>
                                            <div class="col-lg-3">
                                                Minimum Income
                                                <br /><h5>@Convert.ToString(string.Format("{0:C2}", Model.Contract.AcademyProgram.MinIncome))</h5>
                                            </div>
                                        </div>

                                    </p>

                                </section>
                                <footer>
                                </footer>
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="rg-card-simple equal-height text-center">

                                <section>
                                    <p class="text-thin">
                                        <div class="row">
                                           
                                            <iframe style="width:100%; height:600px" src="https://docs.google.com/gview?url=@Model.ContractFile&embedded=true">
                                            </iframe>
                                        </div>
                                        
                                        <div id="str"></div>
                                    </p>
                                </section>
                                <footer>
                                </footer>
                            </div>
                        </div>
                        <div class="col-md-8">
                            <div class="rg-card-simple equal-height text-center">
                                <header>
                                    <h5>Income Share Agreement</h5>
                                    <span>In consideration for @Model.Contract.AcademyProgram.ProgramName by Educational Funding Co.</span>
                                </header>
                                <section>
                                    <p class="text-thin">
                                        <div class="row">
                                            <div class="col-lg-3">
                                                Income Percent
                                                <br /><h5>@Model.Contract.AcademyProgram.IncomePercentage %</h5>
                                                <input id="incomePercentage" name="incomePercentage" value="@Model.Contract.AcademyProgram.IncomePercentage" hidden />
                                            </div>
                                            <div class="col-lg-3">
                                                Payment Term
                                                <br /><h5>@Model.Contract.AcademyProgram.Duration</h5>
                                                <input id="duration" name="duration" value="@Model.Contract.AcademyProgram.Duration" hidden />
                                            </div>
                                            <div class="col-lg-3">
                                                Payment Cap
                                                <br /><h5>@Convert.ToString(string.Format("{0:C2}", Model.Contract.AcademyProgram.Cap))</h5>
                                            </div>
                                            <div class="col-lg-3">
                                                Minimum Income
                                                <br /><h5>@Convert.ToString(string.Format("{0:C2}", Model.Contract.AcademyProgram.MinIncome))</h5>
                                            </div>
                                        </div>

                                    </p>
                                    <hr />

                                    <p class="text-thin">
                                        <div class="row">
                                            <div class="col-lg-12">
                                                This is <b>@Model.Contract.AcademyProgram.IncomePercentage %</b> of my income (pre-tax) for <b>@Model.Contract.AcademyProgram.Duration</b> when I make over <b>@Convert.ToString(string.Format("{0:C2}", Model.Contract.AcademyProgram.MinIncome))</b>.
                                            </div>
                                            <br /><br />
                                            <div class="col-lg-6">
                                                <h6 class="mb-3">Obligations</h6>
                                                <ul>
                                                    <li>Keep your primary bank account connected</li>
                                                    <li>Keep your income updated</li>
                                                    <li>Provide documents within 90 days of request</li>
                                                </ul>
                                            </div>
                                            <div class="col-lg-6">
                                                <h6 class="mb-3">Our Promise</h6>
                                                <ul>
                                                    <li>We will notify you prior to processessing a payment</li>
                                                    <li>We will be transparent and easy to reach</li>
                                                </ul>
                                            </div>
                                            <div class="col-lg-12">
                                                Failure to fulfill your ISA obligations may subject you to payment acceleration.
                                            </div>
                                        </div>

                                    </p>
                                    <hr />
                                    <p class="text-thin">
                                        <div class="row">
                                            <div class="col-lg-5">
                                                IP address
                                                <br /><h5>@Model.Contract.IpAddress</h5>
                                            </div>
                                            <div class="col-lg-5">
                                                Date and Time Signed
                                                <br /><h5>@Model.Contract.DateSigned</h5>
                                            </div>
                                        </div>

                                    </p>

                                    <p class="text-thin">
                                        @*<div class="row">*@
                                        <br /> <br />
                                        <label class="col-lg-12" id="sig-label" style="font-weight:600">Please sign to confirm you have read and consent to the above terms</label>
                                        <div class="row justify-content-md-center">
                                            @*<div class="form-group">*@
                                            <canvas id="sig-canvas" height="100" width="630">
                                                Get a better browser, bro.
                                            </canvas>
                                            <textarea id="sig-dataUrl" class="form-control" asp-for="@Model.Contract.SignatureUrl" rows="5" required hidden></textarea>

                                            <input class="form-control" asp-for="@Model.Contract.DateSigned" hidden>
                                            @*</div>*@
                                        </div>
                                        <div class="row justify-content-md-center">
                                            <img id="sig-image" src="" alt="Your signature will go here!" />
                                        </div>
                                        <br />
                                        <div class="btn-group">
                                            <a class="btn btn-primary" id="sig-submitBtn" style="color:white">Submit Signature</a>
                                            <a class="btn btn-secondary" id="sig-clearBtn" style="color:white">Clear Signature</a>
                                        </div>
                                        <div class="text-center">
                                            <input asp-for="Contract.Id" hidden>
                                            <br /><br />
                                            <a class="btn btn-secondary btn-icon-text" id="signPrev" href="#"><span class="material-icons">arrow_back</span><span class="text">previous</span></a>

                                            @if (string.IsNullOrWhiteSpace(Model.Contract.SignatureUrl))
                                            {
                                                <button class="btn btn-primary submitContract" type="submit" id="submitContract"> Submit Contract</button>
                                            }
                                            else
                                            {
                                                <button class="btn btn-primary disabled submitContract" type="submit" id="submitContract"> Submit Contract</button>
                                            }

                                        </div>
                                        <br /> <br />

                                    </p>

                                </section>
                                <footer>
                                </footer>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </form>
    </div>
</div>



@section Scripts {

    <style>
        #sig-canvas {
            border: 2px dotted #CCCCCC;
            border-radius: 15px;
            cursor: crosshair;
        }
    </style>
    <script src="https://cdn.plaid.com/link/v2/stable/link-initialize.js"></script>
    <script src="~/assets/js/jquery.inputmask.js"></script>
    <script type="text/javascript">
        (async function () {
            const $plaidLinkToken = $("#plaidLinkToken");
            var $plaidPublicToken = $("#plaidPublicToken");
            var $plaidMetaDataArray = $("#plaidMetaDataArray");

            const configs = {
                // Pass the link_token generated in step 2.
                token: $plaidLinkToken.val(),
                onLoad: function () {
                    // The Link module finished loading.
                },
                onSuccess: function (public_token, metadata) {
                    // The onSuccess function is called when the user has
                    // successfully authenticated and selected an account to
                    // use.
                    //
                    // When called, you will send the public_token
                    // and the selected account ID, metadata.accounts,
                    // to your backend app server.
                    //
                    // sendDataToBackendServer({
                    //   public_token: public_token,
                    //   account_id: metadata.accounts[0].id
                    // });
                    $plaidPublicToken.val(public_token);
                    $plaidMetaDataArray.val(JSON.stringify(metadata.accounts));

                    console.log('Public Token: ' + public_token);
                    switch (metadata.accounts.length) {
                        case 0:
                            // Select Account is disabled: https://dashboard.plaid.com/link/account-select
                            break;
                        case 1:
                            console.log('Customer-selected account ID: ' + metadata.accounts[0].id);
                            break;
                        default:
                        // Multiple Accounts is enabled: https://dashboard.plaid.com/link/account-select
                    }
                },
                onExit: async function (err, metadata) {
                    // The user exited the Link flow.
                    if (err != null) {
                        // The user encountered a Plaid API error
                        // prior to exiting.
                    }
                    // metadata contains information about the institution
                    // that the user selected and the most recent
                    // API request IDs.
                    // Storing this information can be helpful for support.
                },
            };

            var linkHandler = Plaid.create(configs);

            document.getElementById('link-button').onclick = function () {
                linkHandler.open();
            };
        })();


        (function () {
            window.requestAnimFrame = (function (callback) {
                return window.requestAnimationFrame ||
                    window.webkitRequestAnimationFrame ||
                    window.mozRequestAnimationFrame ||
                    window.oRequestAnimationFrame ||
                    window.msRequestAnimaitonFrame ||
                    function (callback) {
                        window.setTimeout(callback, 1000 / 60);
                    };
            })();

            var canvas = document.getElementById("sig-canvas");
            var ctx = canvas.getContext("2d");
            ctx.strokeStyle = "#222222";
            ctx.lineWidth = 4;

            var drawing = false;
            var mousePos = {
                x: 0,
                y: 0
            };
            var lastPos = mousePos;

            canvas.addEventListener("mousedown", function (e) {
                drawing = true;
                lastPos = getMousePos(canvas, e);
            }, false);

            canvas.addEventListener("mouseup", function (e) {
                drawing = false;
            }, false);

            canvas.addEventListener("mousemove", function (e) {
                mousePos = getMousePos(canvas, e);
            }, false);

            // Add touch event support for mobile
            canvas.addEventListener("touchstart", function (e) {

            }, false);

            canvas.addEventListener("touchmove", function (e) {
                var touch = e.touches[0];
                var me = new MouseEvent("mousemove", {
                    clientX: touch.clientX,
                    clientY: touch.clientY
                });
                canvas.dispatchEvent(me);
            }, false);

            canvas.addEventListener("touchstart", function (e) {
                mousePos = getTouchPos(canvas, e);
                var touch = e.touches[0];
                var me = new MouseEvent("mousedown", {
                    clientX: touch.clientX,
                    clientY: touch.clientY
                });
                canvas.dispatchEvent(me);
            }, false);

            canvas.addEventListener("touchend", function (e) {
                var me = new MouseEvent("mouseup", {});
                canvas.dispatchEvent(me);
            }, false);

            function getMousePos(canvasDom, mouseEvent) {
                var rect = canvasDom.getBoundingClientRect();
                return {
                    x: mouseEvent.clientX - rect.left,
                    y: mouseEvent.clientY - rect.top
                }
            }

            function getTouchPos(canvasDom, touchEvent) {
                var rect = canvasDom.getBoundingClientRect();
                return {
                    x: touchEvent.touches[0].clientX - rect.left,
                    y: touchEvent.touches[0].clientY - rect.top
                }
            }

            function renderCanvas() {
                if (drawing) {
                    ctx.moveTo(lastPos.x, lastPos.y);
                    ctx.lineTo(mousePos.x, mousePos.y);
                    ctx.stroke();
                    lastPos = mousePos;
                }
            }

            // Prevent scrolling when touching the canvas
            document.body.addEventListener("touchstart", function (e) {
                if (e.target == canvas) {
                    e.preventDefault();
                }
            }, false);
            document.body.addEventListener("touchend", function (e) {
                if (e.target == canvas) {
                    e.preventDefault();
                }
            }, false);
            document.body.addEventListener("touchmove", function (e) {
                if (e.target == canvas) {
                    e.preventDefault();
                }
            }, false);

            (function drawLoop() {
                requestAnimFrame(drawLoop);
                renderCanvas();
            })();

            function clearCanvas() {
                canvas.width = canvas.width;
            }

            // Set up the UI
            var sigText = document.getElementById("sig-dataUrl");
            var sigImage = document.getElementById("sig-image");
            var clearBtn = document.getElementById("sig-clearBtn");
            var submitBtn = document.getElementById("sig-submitBtn");
            var sigLabel = document.getElementById("sig-label");
            var submitContract = document.getElementById("submitContract");

            if (sigText.innerHTML === "") {
                canvas.style.display = "block";
                sigImage.style.display = "none";
                sigLabel.style.display = "block";
                submitContract.disabled = true;
                submitBtn.style.display = "block";
                clearBtn.style.display = "block";
            }
            else {
                canvas.style.display = "none";
                sigImage.style.display = "block";
                sigLabel.style.display = "none";
                submitContract.disabled = false;
                submitBtn.style.display = "none";
                clearBtn.style.display = "none";
            }

            clearBtn.addEventListener("click", function (e) {
                clearCanvas();
                sigText.innerHTML = "";
                sigImage.setAttribute("src", "");
            }, false);
            submitBtn.addEventListener("click", function (e) {
                var dataUrl = canvas.toDataURL();
                sigText.innerHTML = dataUrl;
                sigImage.setAttribute("src", dataUrl);

                canvas.style.display = "none";
                sigImage.style.display = "block";
                sigLabel.style.display = "none";
                submitContract.disabled = false;
                submitBtn.style.display = "none";
                clearBtn.style.display = "none";

            }, false);




        })();


        function currencyFormat(num) {
            return '$' + num.toFixed(2).replace(/(\d)(?=(\d{3})+(?!\d))/g, '$1,')
        }

        $("#ssNumber").inputmask("999-99-9999", {
            inputFormat: "999-99-9999",
            outputFormat: "999-99-9999",
            inputEventOnly: true
        });
        $("#contactPhone").inputmask("1(999) 999-9999", {
            inputFormat: "1(999) 999-9999",
            outputFormat: "1(999) 999-9999",
            inputEventOnly: true
        });
        $("#zipCode").inputmask("99999", {
            inputFormat: "99999",
            outputFormat: "99999",
            inputEventOnly: true
        });

        $(document).ready(function () {

            $("#divValidation").hide();
            const $valueSpan = $('.valueSpan2');
            const $valueSpan1 = $('.valueSpan1');
            const $value = $('#customRange11');
            const $valueSalary = $('#yourSalary');
            const $duration = $('#duration');
            const $totalMonths = $('#totalMonths');
            const $incomePercentage = $('#incomePercentage');
            const $yourPay = $('#yourPay');
            const $sigText1 = $("#sig-dataUrl");
            const $sigImage1 = $("#sig-image");
            const $txtRole = $("#txtRole");

            const $incomeDecimal = parseFloat($incomePercentage.val() / 100);
            const $durationAmt = $duration.val().split(" ")[0];
            const $initialAmt = parseFloat($incomeDecimal * 50000) / parseInt($durationAmt);

            $totalMonths.html($durationAmt);
            $yourPay.html(currencyFormat($initialAmt));
            $valueSpan.html(currencyFormat(parseInt('150000')));
            $valueSpan1.html(currencyFormat(parseInt('0')));
            $valueSalary.html(currencyFormat(parseInt($value.val())));
            $sigImage1.attr("src", $sigText1.val());
            //alert($sigImage1.attr('src'));

            //$("#str").load("htmlpage.html #fullName");
            //$("#str").html(str.html().replace("[Obligor Name]", "Kloteh E. Somah"));

            $value.on('input change', () => {
                $valueSalary.html(currencyFormat(parseInt($value.val())));
                $yourPay.html(currencyFormat(parseFloat($incomeDecimal * parseFloat($value.val())) / parseInt($durationAmt)));
            });

            $('#accountNext').click(function () {
                $('#account-info-tab')[0].click();
            })
            $('#personalInfoPrev').click(function () {
                $('#personal-info-tab')[0].click();
            })
            $('#personalInfoNext').click(function () {
                $('#address-tab')[0].click();
            })
            $('#addressPrev').click(function () {
                $('#account-info-tab')[0].click();
            })
            $('#addressNext').click(function () {
                $('#preview-tab')[0].click();
            })
            $('#connectBankPrev').click(function () {
                $('#account-info-tab')[0].click();
            })
            $('#connectBankNext').click(function () {
                $('#sign-tab')[0].click();
            })
            $('#signPrev').click(function () {
                $('#preview-tab')[0].click();
            })

            $('#submitContract').click(function () {

                var errors = false;
                $("#divValidation ul").empty();

                if ($('#txtFirstName').val() == "") {
                    $("#divValidation ul").append('<li>First Name required</li>');
                    errors = true;
                }

                if ($('#txtLastName').val() == "") {
                    $("#divValidation ul").append('<li>Last Name required</li>');
                    errors = true;
                }

                if ($('#contactPhone').val() == "") {
                    $("#divValidation ul").append('<li>Phone required</li>');
                    errors = true;
                }

                if ($('#ssNumber').val() == "") {
                    $("#divValidation ul").append('<li>Social Securtiy Number required</li>');
                    errors = true;
                }

                if ($('#txtDateOfBirth').val() == "") {
                    $("#divValidation ul").append('<li>Date Of Birth required</li>');
                    errors = true;
                }

                if ($('#txtAddress').val() == "") {
                    $("#divValidation ul").append('<li>Address required</li>');
                    errors = true;
                }

                if ($('#ddlStates').val() == "") {
                    $("#divValidation ul").append('<li>State required</li>');
                    errors = true;
                }

                if ($('#txtCity').val() == "") {
                    $("#divValidation ul").append('<li>City required</li>');
                    errors = true;
                }

                if ($('#zipCode').val() == "") {
                    $("#divValidation ul").append('<li>Zip Code required</li>');
                    errors = true;
                }

                if ($('#plaidPublicToken').val() == "") {
                    $("#divValidation ul").append('<li>Bank connection required</li>');
                    errors = true;
                }

                if ($('#sig-dataUrl').val() == "") {
                    $("#divValidation ul").append('<li>Signature required</li>');
                    errors = true;
                }

                if (errors) {
                    $("#divValidation").show();
                }
                else {
                    $("#divValidation").hide();
                }

            })

            if ($txtRole.val() === "Admin") {
                $('#contractForm input').attr('readonly', 'readonly');
            }

        });


    </script>
}
